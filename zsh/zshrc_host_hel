# ##################################
# same but different
alias cdmaster="cd ~/MasterThesis/"
# Path to your oh-my-zsh installation.
export ZSH=/wang/users/jgoeltz/cluster_home/.oh-my-zsh

# ##################################
# very different
if [ -z $SINGULARITY_APPNAME ]; then
	source /wang/environment/software/Modules/current/init/zsh
	# to have access to new module files, eg the one with vim+x
	export MODULEPATH=/wang/environment/software/jessie/spack/20180129_live/modules:$MODULEPATH
	source /wang/environment/software/jessie/spack/2017-12-01/share/spack/setup-env.sh
else
	source /opt/spack/share/spack/setup-env.sh
fi

#spack_global
if [ -z "$TMUX" -a -z $SINGULARITY_APPNAME ]; then
	module load spack_visionary-defaults/2017-12-01
	module load developmisc_426 # for vim+x
	#module load dev_tools_py2_701 # for current zsh

	read -k1 -t3 "testv?Do you want to load all packages(y/n)?"
	if [[ $? -eq 1 || "$testv" == "y" || "$testv" == "z" ]]; then 
		echo
		echo "Loading modules..."
		module load waf
		module load simulation_py2_696
		# spack unload nest
		# spack load nest@2.2
		spack load nest
		spack load py-pynn@0.7
		spack load py-matplotlib
		spack load py-setuptools@35
		spack load py-packaging
		spack load py-flake8
		spack load py-appdirs
		# for HW; older version to circumvent segfaults
		#module load nmpm_software/2018-07-12-1
		#module load nmpm_software/2018-08-05-1
		module load nmpm_software/$(readlink /wang/environment/modules/nmpm_software/current)

		#spack_local
		#source /wang/users/jgoeltz/cluster_home/spack/share/spack/setup-env.sh
		#module list
		#module purge
		#module list
		#module load nmpm_software/2018-02-01-1
	fi
fi

module list

PATH=$PATH:~/pip_files
if $( echo $PYTHONPATH | grep -vq pip_files); then
	export PYTHONPATH=$PYTHONPATH:/wang/users/jgoeltz/cluster_home/pip_files/
	export PYTHONPATH=$PYTHONPATH:/wang/users/jgoeltz/cluster_home/pip_files/lib/python2.7/site-packages/
	export PYTHONPATH=$PYTHONPATH:/wang/users/jgoeltz/cluster_home/builds_python
	export PYTHONPATH=$PYTHONPATH:/wang/users/jgoeltz/cluster_home/builds_python/lib/python2.7/site-packages/
fi

export MANPATH=/usr/local/share/man:$MANPATH

if [ -z "$PREEXEC_FUNCTIONS_AMMENDED" ]; then
	preexec_functions=($preexec_functions updateEnvTmux)
	PREEXEC_FUNCTIONS_AMMENDED="set"
fi

function whichLicences () {
	for jobid in `squeue -p "experiment" -o "%i" | grep -o "[0-9]*"`; do
		echo -n "Job $jobid "$(squeue -o "%i(%T) from %u" | grep $jobid | grep -o "([^=]*")" has "
		scontrol show jobid $jobid | grep -o --color=never "Licenses=[WFB,0-9]*"                                         
	 done
}

function updateEnvEverywhere () {
	for _pane in `tmux list-panes -a -F '#{pane_id}'`
	do
		tmux send-keys -t ${_pane} ^z ^u updateEnv ^m fg ^m ;
	done
}
function updateEnvTmux () {
	[ -n "$TMUX" ] && [ -n "$(tmux -V | grep -oP '2.')" ] && updateEnv
}
function updateEnv () {
	# uses the current ssh agent and display to allow ssh forwarding and X11 forwarding
	# -> pushing and pulling in git and display use
	eval $(tmux show-environment -s | grep SSH_AUTH_SOCK)
	eval $(tmux show-environment -s | grep DISPLAY)
}

function saveplottedtobackup() {
	for file in $@; do
		if [ ! -f "$file" ] ; then
			echo "$file is not a file, skipping"
			continue
		fi
		madeFileWriteableFirst=false
		if [ $(stat -c %a $file | grep -o '^[0-9]') -eq 4 ]; then
			echo "might run into problems, then make file readable first"
			chmod +w $file
			madeFileWriteableFirst=true
		fi

		# copy to wang folder if not already done and make readonly
		if [ -f "/wang/users/jgoeltz/cluster_home/MasterThesis/data_tempodrom_backupPlotted/$(basename $file)" ] ; then
			echo "File $file already exists in /wang/users/jgoeltz/cluster_home/MasterThesis/data_tempodrom_backupPlotted/, not copying"
		else
			cp $file "/wang/users/jgoeltz/cluster_home/MasterThesis/data_tempodrom_backupPlotted/$(basename $file)"
			chmod 444 "/wang/users/jgoeltz/cluster_home/MasterThesis/data_tempodrom_backupPlotted/$(basename $file)"
		fi

		# copy to loh folder if not already done and make readonly
		if [ -f "/loh/users/jgoeltz/data_tempodrom_backupPlotted/$(basename $file)" ] ; then
			echo "File $file already exists in /loh/users/jgoeltz/data_tempodrom_backupPlotted/, not copying"
		else
			cp $file "/loh/users/jgoeltz/data_tempodrom_backupPlotted/$(basename $file)"
			chmod 444 "/loh/users/jgoeltz/data_tempodrom_backupPlotted/$(basename $file)"
		fi

		# make readonly again
		if $madeFileWriteableFirst; then
			chmod -w $file
		fi
	done
}

alias squeueRepeat="cd ~/MasterThesis/model-tempodrom/code; while true; do squeueRepeat.sh; done"
# function squeueRepeat () {
# 	while true; do
# 		echo -e \\033c
# 		date +"%H:%M:%S"
# 		squeue -o "%.10i %.9P %.8u %.2t %.8M" | grep "experimen\|goelt\|JOBID" --color=auto
# 		if [ "$1" != "" ]; then
# 			echo $1
# 			eval $1
# 		fi
# 		sleep 5
# 	done
# }

# singularity stuff
# singularity shell --app visionary-defaults /containers/stable/latest
# or even better 
singularityzsh () {
	if ! module list 2>&1 | grep -q nmpm_software; then
		echo "no nmpm module loaded"
		return
	fi
	tmpString='singularity exec --app $CONTAINER_APP_NMPM_SOFTWARE /containers/stable/latest zsh'
	echo "about to eval '$tmpString'"
	eval $tmpString
}
alias singularityemrun='singularity exec --app visionary-wafer /containers/stable/latest zsh -c ". /opt/spack/share/spack/setup-env.sh; spack load emscripten; module list; cd $BASEDIR_NMPM_SOFTWARE/lib/webvisu; emrun --no_browser main.html"'

# because of nest bug, load patched nest
alias spacky="module purge; module load spack_visionary-defaults/2017-12-01; . /wang/users/wv385/cluster_home/spack_failure/spack3/share/spack/setup-env.sh; spack load -r nest; module list"

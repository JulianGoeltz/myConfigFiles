# Lines configured by zsh-newuser-install
HISTFILE=~/.zsh_history
HISTSIZE=1000
SAVEHIST=1000
setopt appendhistory
bindkey -v
# End of lines configured by zsh-newuser-install
# The following lines were added by compinstall
zstyle :compinstall filename '/wang/users/jgoeltz/cluster_home/.zshrc'

autoload -Uz compinit
compinit
# End of lines added by compinstall


######## Own stuff
export LC_COLLATE=en_US.UTF-8
export EDITOR=vim
export VISUAL=vim
export LESS=-Ri
alias vi=vim

function module () 
{ 
    eval `/wang/environment/software/Modules/3.2.10/Modules/$MODULE_VERSION/bin/modulecmd bash $*`
}
# to have access to new module files, eg the one with vim+x
export MODULEPATH=/wang/environment/software/jessie/spack/20180129_live/modules:$MODULEPATH

#spack_global
source /wang/environment/software/jessie/spack/2017-12-01/share/spack/setup-env.sh
module load waf
# module load spack_visionary-defaults/2017-12-01
module load developmisc_288 # for vim+x
# spack unload nest
# spack load nest@2.2
spack load nest
spack load py-pynn@0.7
spack load py-matplotlib
spack load py-setuptools@35
spack load py-packaging
spack load py-flake8
spack load py-appdirs
# for HW; older version to circumvent segfaults
module load nmpm_software/2018-04-19-1

#spack_local
#source /wang/users/jgoeltz/cluster_home/spack/share/spack/setup-env.sh
#module list
#module purge
#module list
#module load nmpm_software/2018-02-01-1
module list

function updateEnv ()
{
	# uses the current ssh agent and display to allow ssh forwarding and X11 forwarding
	# -> pushing and pulling in git and display use
	eval $(tmux show-environment -s | grep SSH_AUTH_SOCK)
	eval $(tmux show-environment -s | grep DISPLAY)
}

function squeueRepeat () {
	while true; do
		echo -e \\033c
		date +"%H:%M:%S"
		squeue -o "%.10i %.9P %.8u %.2t %.8M" | grep "experimen\|goelt\|JOBID"
		if [ "$1" != "" ]; then
			echo $1
			eval $1
		fi
		sleep 5
	done
}
alias cdmaster="cd ~/MasterThesis/"
# disable lightdm for a starting into ttyX instead of Xserver
# sudo systemctl disable lightdm.service
# reenable by using BOTH
# sudo systemctl reenable lightdm.service
# AND
# sudo dpkg-reconfigure lightdm
#alias lock="gnome-screensaver-command --lock; sudo pm-suspend"

setopt INC_APPEND_HISTORY SHARE_HISTORY  # adds history incrementally and share it across sessions
REPORTTIME=10 # print elapsed time when more than 10 seconds
#source /etc/zsh_command_not_found # to get info about similar commands
PATH=$PATH:~/myConfigFiles/toolbox
PATH=$PATH:~/pip_files
export PYTHONPATH=$PYTHONPATH:/wang/users/jgoeltz/cluster_home/pip_files/
export PYTHONPATH=$PYTHONPATH:/wang/users/jgoeltz/cluster_home/pip_files/lib/python2.7/site-packages/

export MANPATH=/usr/local/share/man:$MANPATH

alias sshhel="ssh -p 11022 jgoeltz@brainscales-r.kip.uni-heidelberg.de"
alias sshice="ssh -p 7022 jgoeltz@brainscales-r.kip.uni-heidelberg.de"

# eval $(thefuck --alias) # for corrcet bindings
######## end


# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
  export ZSH=/wang/users/jgoeltz/cluster_home/.oh-my-zsh

# Set name of the theme to load. Optionally, if you set this to "random"
# it'll load a random theme each time that oh-my-zsh is loaded.
# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes
ZSH_THEME="robbyrussell"

# Set list of themes to load
# Setting this variable when ZSH_THEME=random
# cause zsh load theme from this variable instead of
# looking in ~/.oh-my-zsh/themes/
# An empty array have no effect
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion. Case
# sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
HIST_STAMPS="yyyy-mm-dd"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(
  git tmux # thefuck
)

source $ZSH/oh-my-zsh.sh
RPROMPT='%{$fg[cyan]%}[%?]%{$reset_color%} | %{$fg[yellow]%}%*%{$reset_color%}'
PROMPT='%B %{$fg[cyan]%}%c%b%{$reset_color%} $(git_prompt_info)'

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/rsa_id"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"
